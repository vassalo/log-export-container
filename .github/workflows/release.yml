on:
  push:
    branches: [ main ]
  workflow_dispatch:

name: main-release

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        id: version
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          RELEASE_BRANCHES: main
          DEFAULT_BUMP: patch
          TAG_CONTEXT: branch

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

#      - name: Build, tag, and push the image to Amazon ECR
#        id: build-image
#        env:
#          ECR_REGISTRY: public.ecr.aws/strongdm
#          ECR_REPOSITORY: log-export-container
#          IMAGE_TAG: ${{ steps.version.outputs.new_tag }}
#        run: |
#          # Adding version
#          echo _version_=\"$IMAGE_TAG\" > fluentd/_version.rb
#          # Authenticating to ECR
#          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
#          # Create multiarch builder container
#          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#          docker buildx create --name multiarch --driver docker-container --use
#          # Building docker image for multiple platforms and pushing to ECR
#          docker buildx build --push --platform "linux/amd64,linux/arm64" -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#          docker buildx build --push --platform "linux/amd64,linux/arm64" -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
#          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
      - name: Build and publish gem
        env:
         LEC_VERSION: ${{ steps.version.outputs.new_tag }}
         RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
        run: |
          touch ~/.gem/credentials
          echo ":api-key: ${RUBYGEMS_API_KEY}" > ~/.gem/credentials
          gem build .gemspec
          gem push ./log-export-container-${LEC_VERSION}.gem --key api-key
